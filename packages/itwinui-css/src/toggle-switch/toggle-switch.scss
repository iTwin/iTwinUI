// Copyright (c) Bentley Systems, Incorporated. All rights reserved.
// See LICENSE.md in the project root for license terms and full copyright notice.
@use '../mixins';

.iui-toggle-switch {
  &:where(:not([data-iui-size='small'])) {
    --_iui-toggle-switch-handle-size: var(--iui-size-m);
    --_iui-toggle-switch-handle-offset: var(--iui-size-2xs);
  }

  &:where([data-iui-size='small']) {
    --_iui-toggle-switch-handle-size: var(--iui-size-s);
    --_iui-toggle-switch-handle-offset: var(--iui-size-3xs);
  }
}

.iui-toggle-switch-wrapper {
  @include mixins.iui-reset;
  display: grid;
  grid-template-areas: 'toggle';
  align-items: center;
  gap: var(--iui-size-xs);
  font-size: var(--iui-font-size-1);
  inline-size: fit-content;
  user-select: none;
  cursor: pointer;
  isolation: isolate;
  color: var(--iui-color-text);

  // Disabled
  &.iui-disabled {
    cursor: not-allowed;
    color: var(--iui-color-text-disabled);
    @media (forced-colors: active) {
      color: GrayText;
    }
  }

  // For labels on the left
  &.iui-label-on-left {
    grid-template-areas: 'label toggle';
  }

  // For labels on the right
  &.iui-label-on-right {
    grid-template-areas: 'toggle label';
  }

  // If using custom icon, hide the default checkmark
  &:has(.iui-toggle-switch-icon) .iui-toggle-switch::before {
    content: none;
  }
}

.iui-toggle-switch {
  $iui-toggle-switch-border-thickness: 1px;
  --_checkmark: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="m6.5 12.5-4.5-4.5 1.5-1.5 3 3 6-6 1.5 1.5z" /></svg>');

  &:where(:not([data-iui-size='small'])) {
    --_iui-toggle-switch-handle-size: var(--iui-size-m);
    --_iui-toggle-switch-handle-offset: var(--iui-size-2xs);
  }

  &:where([data-iui-size='small']) {
    --_iui-toggle-switch-handle-size: var(--iui-size-s);
    --_iui-toggle-switch-handle-offset: var(--iui-size-3xs);
  }

  @include mixins.iui-reset;
  @include mixins.iui-focus(
    $thickness: $iui-toggle-switch-border-thickness,
    $offset: $iui-toggle-switch-border-thickness
  );
  grid-area: toggle;
  display: flex;
  position: relative;
  cursor: pointer;
  appearance: none;
  inline-size: calc((var(--_iui-toggle-switch-handle-size) + var(--_iui-toggle-switch-handle-offset) * 2) * 2);
  block-size: calc(
    var(--_iui-toggle-switch-handle-size) + (var(--_iui-toggle-switch-handle-offset) * 2) +
      ($iui-toggle-switch-border-thickness * 2)
  );
  border-radius: var(--iui-border-radius-round);
  transition:
    background-color var(--iui-duration-1) ease-out,
    border-color var(--iui-duration-1) ease-out;
  background-color: var(--iui-color-background);
  border: $iui-toggle-switch-border-thickness solid;

  &-label {
    grid-area: label;
  }

  &::before {
    content: '';
    position: absolute;
    inset-inline-start: var(--iui-size-2xs);
    inset-block-start: 50%;
    transform: translateY(-50%);

    display: inline-block;
    aspect-ratio: 1;
    inline-size: 1rem;

    mask: var(--_checkmark) no-repeat center;
    background-color: var(--iui-color-white);
  }

  &::after {
    content: '';
    block-size: var(--_iui-toggle-switch-handle-size);
    inline-size: var(--_iui-toggle-switch-handle-size);
    margin: var(--_iui-toggle-switch-handle-offset);
    aspect-ratio: 1 / 1;
    border-radius: var(--iui-border-radius-round);
    transition: background-color var(--iui-duration-1) ease-out;
    z-index: 2;
    @media (prefers-reduced-motion: no-preference) {
      transition:
        transform var(--iui-duration-1) ease-out,
        background-color var(--iui-duration-1) ease-out;
    }
  }

  // #region Unchecked toggle switch
  background-color: var(--iui-color-background);
  border-color: var(--iui-color-border-foreground);
  @media (forced-colors: active) {
    border-color: CanvasText;
  }

  &::after {
    background-color: var(--iui-color-icon);
    @media (forced-colors: active) {
      background-color: CanvasText;
    }
  }

  &:is(:hover, :focus-visible) {
    border-color: var(--iui-color-border-foreground-hover);
    @media (forced-colors: active) {
      border-color: CanvasText;
    }

    &::after {
      background-color: var(--iui-color-icon-hover);
    }
  }
  // #endregion Unchecked toggle switch

  // #region Checked toggle switch
  &:checked {
    background-color: var(--iui-color-background-accent);
    border-color: var(--iui-color-background-accent);
    @media (forced-colors: active) {
      background-color: Highlight;
      border-color: Highlight;
    }

    &::after {
      transform: translateX(calc(var(--_iui-toggle-switch-handle-size) + var(--_iui-toggle-switch-handle-offset)));
      background-color: var(--iui-color-white);
      @media (forced-colors: active) {
        background-color: HighlightText;
      }
    }

    ~ .iui-toggle-switch-icon {
      opacity: var(--iui-opacity-1);
    }
  }
  // #endregion Checked toggle switch

  // #region Disabled toggle switch
  &:disabled {
    cursor: not-allowed;
    background-color: var(--iui-color-background-disabled);
    border-color: var(--iui-color-border-disabled);
    @media (forced-colors: active) {
      border-color: GrayText;
    }

    &::after {
      background-color: var(--iui-color-icon-disabled);

      @media (forced-colors: active) {
        background-color: GrayText;
        opacity: 0.75;
      }
    }

    ~ .iui-toggle-switch-icon {
      opacity: 0;

      svg {
        fill: var(--iui-color-icon);
      }
    }

    &:checked {
      @media (forced-colors: active) {
        background-color: GrayText;
      }

      &::after {
        @media (forced-colors: active) {
          background-color: Canvas;
        }
      }

      ~ .iui-toggle-switch-icon {
        opacity: var(--iui-opacity-5);

        @media (forced-colors: active) {
          opacity: 0.75;

          /* stylelint-disable-next-line max-nesting-depth */
          svg {
            fill: Canvas;
          }
        }
      }
    }
  }
  // #endregion Disabled toggle switch

  &-icon {
    opacity: 0;
    grid-area: toggle;
    margin: calc(var(--_iui-toggle-switch-handle-offset) + $iui-toggle-switch-border-thickness);
    z-index: 1;
    transition: opacity var(--iui-duration-1) ease-out;
    pointer-events: none;

    &,
    svg {
      display: flex;
      inline-size: var(--_iui-toggle-switch-handle-size);
      block-size: var(--_iui-toggle-switch-handle-size);
    }

    svg {
      padding: calc(var(--_iui-toggle-switch-handle-size) * 0.125);
      fill: var(--iui-color-white);
      @media (forced-colors: active) {
        fill: HighlightText;
      }
    }
  }
}

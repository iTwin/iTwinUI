// Copyright (c) Bentley Systems, Incorporated. All rights reserved.
// See LICENSE.md in the project root for license terms and full copyright notice.
@use '../mixins';

@mixin iui-input {
  --_iui-input-background-color: var(--iui-color-background);
  --_iui-input-border-color: var(--iui-color-border-foreground);
  --_iui-input-text-color: var(--iui-color-text);

  @include mixins.iui-reset;
  @include mixins.iui-focus($offset: -2px, $thickness: 2px);
  inline-size: 100%;
  font-family: inherit;
  font-size: var(--iui-font-size-1);
  font-weight: var(--iui-font-weight-normal);
  line-height: var(--iui-size-l);
  border-radius: var(--iui-border-radius-1);
  appearance: none;
  min-block-size: var(--_iui-input-min-height);
  padding-block: var(--_iui-input-padding-block);
  padding-inline: var(--iui-size-s);
  color: var(--_iui-input-text-color);
  background-color: var(--_iui-input-background-color);
  border: 1px solid var(--_iui-input-border-color);
  transition: border-color var(--iui-duration-1) ease-out;
  @include iui-input-size;

  &::placeholder {
    --_iui-input-text-color: var(--iui-color-text-disabled);
    user-select: none;
    color: var(--_iui-input-text-color);
  }

  &:autofill {
    --_iui-input-background-color: var(--iui-color-background-accent-muted);
    --_iui-input-border-color: var(--iui-color-border-accent);
    --_iui-input-text-color: var(--iui-color-text-accent);
  }

  &:hover {
    --_iui-input-border-color: var(--iui-color-border-foreground-hover);
  }

  &[disabled] {
    --_iui-input-background-color: var(--iui-color-background-disabled);
    --_iui-input-border-color: var(--iui-color-border-disabled);
    --_iui-input-with-icon-hover-border-color: var(--iui-color-border-disabled);
    cursor: not-allowed;
  }

  &:where(textarea) {
    @include textarea;
  }
}

/// Mixin for applying padding and font size to various input sizes.
/// @arg size - must be one of: small, medium, large
@mixin iui-input-size($size: medium) {
  @if $size == small {
    --_iui-input-padding-block: 0;
    --_iui-input-min-height: var(--iui-component-height-small);
  }

  @if $size == medium {
    --_iui-input-padding-block: var(--iui-size-2xs);
    --_iui-input-min-height: var(--iui-component-height);
  }

  @if $size == large {
    --_iui-input-padding-block: var(--iui-size-xs);
    --_iui-input-min-height: var(--iui-component-height-large);
    font-size: var(--iui-font-size-2);
  }
}

@mixin textarea {
  line-height: inherit;
  resize: vertical;

  &[disabled],
  &[readonly] {
    resize: none;
  }
}

// ----------------------------------------------------------------------------

.iui-input {
  @include iui-input;

  &[data-iui-size='small'] {
    @include iui-input-size(small);
  }

  &[data-iui-size='large'] {
    @include iui-input-size(large);
  }
}

// Mixin to have inputs combined with icon (eg. select)
.iui-input-with-icon {
  display: grid;
  align-items: center;
  cursor: pointer;
  position: relative;

  > :first-child {
    grid-area: 1 / -1;
    padding-inline-end: var(--iui-component-height); // Width of the end-icon button
  }

  &:focus-within {
    > :first-child {
      // --_focus-color can be used to control this from outside
      outline: 2px solid var(--_focus-color, var(--iui-color-border-accent));
      outline-offset: -2px;
    }
  }

  &:hover {
    > :first-child {
      // --_iui-input-with-icon-hover-border-color can be used to control this from outside
      border-color: var(--_iui-input-with-icon-hover-border-color, var(--iui-color-border-foreground-hover));
    }
  }

  > .iui-select-tag-container {
    max-inline-size: 70%;
    inset-inline-end: unset;
  }
}

.iui-end-icon {
  $margin-end: calc(var(--iui-size-xs) + 1px);
  display: flex;
  grid-area: 1 / -1;

  justify-self: end;
  margin: 0 #{$margin-end} 0 0;
  position: relative;
  block-size: 100%;
  inline-size: fit-content;
  display: inline-flex;
  align-items: center;

  svg:where(:not(.iui-button svg)) {
    @include mixins.iui-icon-style('m');
  }

  &,
  .iui-button {
    border-start-start-radius: 0;
    border-end-start-radius: 0;
    border-start-end-radius: inherit;
    border-end-end-radius: inherit;
  }

  .iui-button {
    margin-inline-end: calc(-1 * $margin-end);
  }

  &.iui-disabled {
    cursor: not-allowed;

    svg {
      fill: var(--iui-color-icon-disabled);
    }
  }

  .iui-actionable {
    align-items: center;
    block-size: calc(100% - 4px); // subtract 2px on both sides to avoid overlapping with border/outline
    margin-inline-end: 2px; // shift 2px from the right to avoid overlapping with border/outline
    border-radius: var(--iui-border-radius-1);
    padding-inline: calc(var(--iui-size-xs) + 1px);
    cursor: pointer;
    box-sizing: content-box;

    @include mixins.iui-ripple(var(--iui-color-background), var(--iui-color-background-backdrop));

    svg {
      fill: var(--iui-color-icon);
      transition: transform var(--iui-duration-1) ease-out;
    }

    &.iui-open svg {
      transform: rotate(180deg); // transform for arrow icon (e.g. svg-caret-down), used in combobox
    }
  }
}

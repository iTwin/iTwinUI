// Copyright (c) Bentley Systems, Incorporated. All rights reserved.
// See LICENSE.md in the project root for license terms and full copyright notice.
@import '../../style/index';
@import '../mixins';

/// Container for grouping inputs with a label, an icon and a status message.
/// Supported modifiers: .iui-inline-label, .iui-inline-icon and .iui-with-message
@mixin iui-input-container {
  @include iui-reset;
  display: grid;
  grid-template:
    'label label'
    'inputs inputs' / auto 1fr;

  &.iui-inline-icon {
    > .iui-input {
      padding-right: $iui-icon-default + $iui-l;

      &:last-child {
        padding-right: $iui-sm;
      }
    }
  }

  &.iui-with-message {
    grid-template:
      'label label'
      'inputs inputs'
      'icon message' / auto 1fr;

    // add margin to the icon if it is below input
    &:not(.iui-inline-icon) > .iui-input-icon {
      margin-top: $iui-component-offset;
    }
  }

  .iui-input,
  .iui-input-with-icon,
  .iui-input-group {
    grid-area: inputs;
  }

  .iui-input-group .iui-toggle-switch-wrapper {
    padding: ($iui-baseline * 0.5) 0;
  }

  // #region Cursors
  @include iui-input-label-cursor;

  &.iui-disabled {
    label {
      cursor: not-allowed;
    }
  }
  // #endregion

  // Appropriate spacing even if no text label is given
  .iui-checkbox-wrapper,
  .iui-radio-wrapper {
    min-height: $iui-line-height;
  }

  &.iui-inline-label {
    grid-template: 'label inputs icon' / auto 1fr auto;

    &.iui-with-message {
      grid-template:
        'label inputs inputs'
        '. icon message' / auto auto 1fr;
    }

    > .iui-input-group {
      display: flex;
      gap: $iui-m;

      &:not(:last-child) {
        margin-right: $iui-m;
      }
    }
  }
}

/// Cursor styling for the label.
@mixin iui-input-label-cursor {
  cursor: default;

  @at-root {
    label#{&} {
      cursor: pointer;

      &.iui-disabled {
        cursor: not-allowed;
      }
    }
  }
}

/// Text label for an input.
/// Supports .iui-required modifier to show red asterisk.
@mixin iui-input-label-styling {
  font-weight: $iui-font-weight-semibold;
  margin-bottom: $iui-component-offset;

  &.iui-required {
    &::after {
      content: '*';
      margin-left: $iui-xs;
      color: var(--iui-color-foreground-negative);
    }
  }
}

/// Modifier on iui-input-label-styling to place it inline.
@mixin iui-input-label-inline {
  margin: 0 $iui-m 0 0;

  &.iui-required {
    margin-right: $iui-xs * 1.5;
  }
}

/// Label inside the input-container grid.
@mixin iui-input-container-label {
  @include iui-input-label-styling;
  grid-area: label;
  align-self: center;
}

/// Independent label outside the grid.
/// Supports .iui-inline modifier to place it inline.
@mixin iui-input-label {
  @include iui-input-label-styling;
  @include iui-input-label-cursor;
  display: block;

  &.iui-inline {
    @include iui-input-label-inline;
    display: inline-flex;
    align-items: center;
  }
}

/// Message shown below input
@mixin iui-input-message {
  font-size: $iui-font-size-small;
  grid-area: message;
  margin-top: $iui-component-offset;
  color: var(--iui-text-color-muted);

  a {
    user-select: none;
  }
}

/// Icon to be shown near a message.
@mixin iui-input-icon {
  @include iui-icon-style('m');
  @include iui-icon-color;
  grid-area: icon;
  align-self: center;

  &:not(:last-child) {
    margin-right: $iui-xs;
  }
}

/// Modifier on iui-input-icon to place it at the end of input.
@mixin iui-input-icon-inline {
  grid-area: inputs;
  justify-self: end;
  margin: 0 ($iui-sm + $iui-xxs) 0 0;
  position: relative;

  svg {
    @include iui-icon-style('m');
  }

  &.iui-button {
    height: 100%;
    width: fit-content;
    margin-right: 0;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
  }

  &.iui-actionable {
    align-items: center;
    height: 90%;
    margin-right: $iui-xxs;
    padding: 0 $iui-sm;
    cursor: pointer;

    @include iui-ripple(var(--iui-color-background-1), var(--iui-color-background-2));

    svg {
      fill: var(--iui-icon-color-actionable);
      transition: transform $iui-speed-fast ease-out;
    }

    &.iui-open svg {
      transform: rotate(180deg); // transform for arrow icon (e.g. svg-caret-down), used in combobox
    }
  }

  &.iui-disabled {
    cursor: not-allowed;

    svg {
      fill: var(--iui-icon-color-actionable-disabled);
    }
  }
}

/// Mixin for applying status colors to input container.
/// @arg status - must be one of: positive, negative, warning
/// @arg iconSelector - selector to apply status fill on. Defaults to .iui-input-icon
/// @arg textSelector - selector to apply text color on. Defaults to .iui-message
@mixin iui-input-status($status, $iconSelector: '.iui-input-icon', $textSelector: '.iui-message') {
  @include iui-text-selection($status);

  #{$iconSelector} {
    fill: var(--iui-color-foreground-#{$status});
  }

  #{$textSelector} {
    color: var(--iui-color-foreground-#{$status});

    a {
      text-decoration: underline;
      color: var(--iui-color-foreground-#{$status});

      &:hover {
        text-decoration: none;
        color: var(--iui-color-foreground-#{$status}-overlay);
      }
    }
  }

  .iui-input {
    padding-bottom: $iui-component-padding-vertical - 1px;

    &.iui-small {
      padding-bottom: $iui-component-padding-vertical-small - 1px;
    }

    &.iui-large {
      padding-bottom: $iui-component-padding-vertical-large - 1px;
    }

    border-bottom: $iui-xxs solid var(--iui-color-foreground-#{$status});

    &:focus {
      border-bottom: $iui-xxs solid var(--iui-color-foreground-#{$status});
      outline: 2px solid var(--iui-color-foreground-#{$status});
      outline-offset: -2px;
    }
  }

  .iui-input-with-icon {
    --_hover-color: var(--iui-color-foreground-#{$status});
    --_focus-color: var(--iui-color-foreground-#{$status});
  }

  .iui-select-button {
    border-bottom: transparent;

    &::after {
      content: '';
      width: 100%;
      position: absolute;
      bottom: 0;
      left: 0;
      height: $iui-xxs;
      background-color: var(--iui-color-foreground-#{$status});
    }
  }
}

// Copyright (c) Bentley Systems, Incorporated. All rights reserved.
// See LICENSE.md in the project root for license terms and full copyright notice.
@use '../mixins';

/// Container for grouping inputs with a label, an icon and a status message.
/// Supported modifiers: .iui-inline-label, .iui-inline-icon and .iui-with-message
@mixin iui-input-container {
  @include mixins.iui-reset;
  display: grid;
  grid-template:
    'label label'
    'inputs inputs' / auto 1fr;

  &.iui-inline-icon {
    > .iui-input {
      padding-right: var(--iui-component-height);

      &:last-child {
        padding-right: var(--iui-size-s);
      }
    }
  }

  &.iui-with-message {
    grid-template:
      'label label'
      'inputs inputs'
      'icon message' / auto 1fr;

    // add margin to the icon if it is below input
    &:not(.iui-inline-icon) > .iui-input-icon {
      margin-top: var(--iui-size-2xs);
    }
  }

  .iui-input,
  .iui-input-with-icon,
  .iui-input-group {
    grid-area: inputs;
  }

  .iui-input-group .iui-toggle-switch-wrapper {
    padding: calc(var(--iui-size-s) * 0.5) 0;
  }

  // #region Cursors
  @include iui-input-label-cursor;

  &.iui-disabled {
    --_iui-input-label-color: var(--iui-color-text-disabled);

    label {
      cursor: not-allowed;
    }
  }
  // #endregion

  // Appropriate spacing even if no text label is given
  .iui-checkbox-wrapper,
  .iui-radio-wrapper {
    min-height: var(--iui-size-l);
  }

  &.iui-inline-label {
    grid-template: 'label inputs icon' / auto 1fr auto;

    &.iui-with-message {
      grid-template:
        'label inputs inputs'
        '. icon message' / auto auto 1fr;
    }

    > .iui-input-group {
      display: flex;
      gap: var(--iui-size-m);

      &:not(:last-child) {
        margin-right: var(--iui-size-m);
      }
    }
  }
}

/// Cursor styling for the label.
@mixin iui-input-label-cursor {
  cursor: default;

  &:is(label) {
    cursor: pointer;

    &.iui-disabled {
      cursor: not-allowed;
    }
  }
}

/// Text label for an input.
/// Supports .iui-required modifier to show red asterisk.
@mixin iui-input-label-styling {
  font-weight: var(--iui-font-weight-semibold);
  margin-bottom: var(--iui-size-2xs);
  color: var(--_iui-input-label-color);

  &.iui-required {
    &::after {
      content: '*';
      margin-left: var(--iui-size-2xs);
      color: var(--iui-color-text-negative);
    }
  }

  &.iui-disabled {
    --_iui-input-label-color: var(--iui-color-text-disabled);
  }
}

/// Modifier on iui-input-label-styling to place it inline.
@mixin iui-input-label-inline {
  margin: 0 var(--iui-size-m) 0 0;

  &.iui-required {
    margin-right: calc(var(--iui-size-2xs) * 1.5 - 1px);
  }
}

/// Label inside the input-container grid.
@mixin iui-input-container-label {
  @include iui-input-label-styling;
  grid-area: label;
  align-self: center;
  cursor: pointer;
}

/// Independent label outside the grid.
/// Supports .iui-inline modifier to place it inline.
@mixin iui-input-label {
  @include iui-input-label-styling;
  @include iui-input-label-cursor;
  display: block;

  &.iui-inline {
    @include iui-input-label-inline;
    display: inline-flex;
    align-items: center;
  }
}

/// Message shown below input
@mixin iui-input-message {
  font-size: var(--iui-font-size-0);
  grid-area: message;
  margin-top: var(--iui-size-2xs);
  color: var(--iui-color-text-muted);

  a {
    user-select: none;
  }
}

/// Icon to be shown near a message.
@mixin iui-input-icon {
  @include mixins.iui-icon-style('m');
  @include mixins.iui-icon-color;
  grid-area: icon;
  align-self: center;

  &:not(:last-child) {
    margin-right: var(--iui-size-2xs);
  }
}

/// Modifier on iui-input-icon to place it at the end of input.
@mixin iui-input-icon-inline {
  grid-area: inputs;
  justify-self: end;
  margin: 0 calc(var(--iui-size-xs) + 1px) 0 0;
  position: relative;

  svg {
    @include mixins.iui-icon-style('m');
  }

  &.iui-button {
    height: 100%;
    width: fit-content;
    margin-right: 0;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
  }

  &.iui-actionable {
    align-items: center;
    height: calc(100% - 4px); // subtract 2px on both sides to avoid overlapping with border/outline
    margin-right: 2px; // shift 2px from the right to avoid overlapping with border/outline
    border-radius: var(--iui-border-radius-1);
    padding-inline: calc(var(--iui-size-xs) + 1px);
    cursor: pointer;
    box-sizing: content-box;

    @include mixins.iui-ripple(var(--iui-color-background), var(--iui-color-background-backdrop));

    svg {
      fill: var(--iui-color-icon);
      transition: transform var(--iui-duration-1) ease-out;
    }

    &.iui-open svg {
      transform: rotate(180deg); // transform for arrow icon (e.g. svg-caret-down), used in combobox
    }
  }

  &.iui-disabled {
    cursor: not-allowed;

    svg {
      fill: var(--iui-color-icon-disabled);
    }
  }
}

/// Mixin for applying status colors to input container.
/// @arg status - must be one of: positive, negative, warning
/// @arg iconSelector - selector to apply status fill on. Defaults to .iui-input-icon
/// @arg textSelector - selector to apply text color on. Defaults to .iui-message
@mixin iui-input-status($status, $iconSelector: '.iui-input-icon', $textSelector: '.iui-message') {
  @include mixins.iui-text-selection($status);

  #{$iconSelector} {
    fill: var(--iui-color-icon-#{$status});
  }

  #{$textSelector} {
    color: var(--iui-color-text-#{$status});

    a {
      text-decoration: underline;
      color: var(--iui-color-text-#{$status});

      &:hover {
        text-decoration: none;
        color: var(--iui-color-text-#{$status}-hover);
      }
    }
  }

  .iui-input {
    // #region Bottom padding to accomodate for status stripe
    padding-bottom: calc(var(--iui-size-2xs) - 1px);

    &[data-iui-size='small'] {
      padding-bottom: 0;
    }

    &[data-iui-size='large'] {
      padding-bottom: calc(var(--iui-size-xs) - 1px);
    }
    // #endregion

    border-bottom: var(--iui-size-3xs) solid var(--iui-color-border-#{$status});

    &:focus {
      border-bottom: var(--iui-size-3xs) solid var(--iui-color-border-#{$status});
      outline: 2px solid var(--iui-color-text-#{$status});
      outline-offset: -2px;
    }

    &:hover {
      --_iui-input-border-color: var(--iui-color-border-#{$status});
    }
  }

  .iui-input-with-icon {
    --_iui-input-with-icon-hover-border-color: var(--iui-color-border-#{$status});
    --_focus-color: var(--iui-color-text-#{$status});
  }

  .iui-select-button {
    border-bottom: transparent;

    &::after {
      content: '';
      width: 100%;
      position: absolute;
      bottom: 0;
      left: 0;
      height: var(--iui-size-3xs);
      background-color: var(--iui-color-border-#{$status});
    }
  }
}

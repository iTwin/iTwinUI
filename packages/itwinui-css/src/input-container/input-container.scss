// Copyright (c) Bentley Systems, Incorporated. All rights reserved.
// See LICENSE.md in the project root for license terms and full copyright notice.
@use '../mixins' as *;

.iui-input-grid {
  display: grid;
  row-gap: var(--iui-size-2xs);
  grid-template-columns: 1fr;
  grid-template-rows: auto;
  align-items: center;

  &[data-iui-label-placement='inline'] {
    grid-template-rows: 1fr auto;
    grid-template-columns: auto 1fr;

    .iui-input-label {
      margin: 0 var(--iui-size-m) 0 0;

      &.iui-required {
        margin-inline-end: calc(var(--iui-size-2xs) * 1.5 - 1px);
      }
    }

    .iui-input-group {
      flex-direction: row;
      gap: var(--iui-size-m);
    }
  }

  .iui-status-message {
    grid-column-end: -1;
  }

  @each $status in positive, warning, negative {
    &[data-iui-status='#{$status}'] {
      @include iui-text-selection($status);

      .iui-input {
        // #region Bottom padding to accomodate for status stripe
        padding-block-end: calc(var(--iui-size-2xs) - 1px);

        &[data-iui-size='small'] {
          padding-block-end: 0;
        }

        &[data-iui-size='large'] {
          padding-block-end: calc(var(--iui-size-xs) - 1px);
        }
        // #endregion

        border-block-end: var(--iui-size-3xs) solid var(--iui-color-border-#{$status});

        &:focus {
          border-block-end: var(--iui-size-3xs) solid var(--iui-color-border-#{$status});
          outline: 2px solid var(--iui-color-text-#{$status});
          outline-offset: -2px;
        }

        &:hover {
          --_iui-input-border-color: var(--iui-color-border-#{$status});
        }
      }

      .iui-input-with-icon {
        --_iui-input-with-icon-hover-border-color: var(--iui-color-border-#{$status});
        --_iui-input-with-icon-focus-color: var(--iui-color-text-#{$status});
      }

      .iui-select-button {
        border-block-end: transparent;

        &::after {
          content: '';
          inline-size: 100%;
          position: absolute;
          inset-block-end: 0;
          inset-inline-start: 0;
          block-size: var(--iui-size-3xs);
          background-color: var(--iui-color-border-#{$status});
        }
      }
    }
  }
}

.iui-input-label {
  font-weight: var(--iui-font-weight-semibold);
  color: var(--_iui-input-label-color);

  &.iui-required {
    &::after {
      content: '*';
      margin-inline-start: var(--iui-size-2xs);
      color: var(--iui-color-text-negative);
    }
  }

  &[data-iui-disabled='true'] {
    --_iui-input-label-color: var(--iui-color-text-disabled);
  }

  cursor: default;

  &:is(label) {
    cursor: pointer;

    &[data-iui-disabled='true'] {
      cursor: not-allowed;
    }
  }
  display: block;

  &.iui-inline {
    margin: 0 var(--iui-size-m) 0 0;

    &.iui-required {
      margin-inline-end: calc(var(--iui-size-2xs) * 1.5 - 1px);
    }

    display: inline-flex;
    align-items: center;
  }
}

// ----------------------------------------------------------------------------

.iui-input-flex-container {
  --_iui-input-background-color: var(--iui-color-background);
  --_iui-input-border-color: var(--iui-color-border-foreground);
  --_iui-input-accent-border-color: var(--iui-color-border-accent);
  --_iui-input-text-color: var(--iui-color-text);
  --_iui-input-padding-block: var(--iui-size-2xs);
  --_iui-input-min-height: var(--iui-component-height);

  display: inline-flex;
  align-items: center;
  background-color: var(--_iui-input-background-color);
  border-radius: var(--iui-border-radius-1);
  color: var(--_iui-input-text-color);
  position: relative;
  block-size: var(--_iui-input-min-height);
  inline-size: 100%;
  isolation: isolate;
  min-block-size: var(--_iui-input-min-height);
  block-size: fit-content;

  // Adding before pseudo-element to make inner elements more centered
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    border: 1px solid var(--_iui-input-border-color);
    border-radius: var(--iui-border-radius-1);
    transition: border-color var(--iui-duration-1) ease-out;
  }

  &:hover {
    --_iui-input-border-color: var(--iui-color-border-foreground-hover);
  }

  &:has(input:focus-visible),
  &:has(textarea:focus-visible) {
    outline: 2px solid var(--_iui-input-accent-border-color);
    outline-offset: -2px;

    // Added to make sure border color is not visible with outline
    &::before {
      border-color: transparent;
    }
  }

  @supports not selector(:has(+ *)) {
    &:where(:focus-within) {
      outline: 2px solid var(--_iui-input-accent-border-color);
      outline-offset: -2px;

      // Added to make sure border color is not visible with outline
      &::before {
        border-color: transparent;
      }
    }
  }

  input,
  textarea {
    box-sizing: border-box;
    background: transparent;
    border: none;
    font: inherit;
    z-index: 2;
    min-inline-size: var(--_iui-input-min-height);
    min-block-size: var(--_iui-input-min-height);
    flex: 999;
    padding-inline: var(--iui-size-s);
    padding-block: var(--_iui-input-padding-block);

    &:is(:not(:first-child)) {
      padding-inline-start: var(--iui-size-2xs);
    }

    &::placeholder {
      color: var(--iui-color-text-placeholder);
      font-weight: var(--iui-font-weight-light);
      opacity: 1;
    }

    &:focus {
      outline: none;
    }
  }

  &[data-iui-disabled='true'] {
    --_iui-input-background-color: var(--iui-color-background-disabled);
    --_iui-input-border-color: var(--iui-color-border-disabled);
    --_iui-input-with-icon-hover-border-color: var(--iui-color-border-disabled);
    cursor: not-allowed;
  }

  &[data-iui-size='small'] {
    --_iui-input-padding-block: 0;
    --_iui-input-min-height: var(--iui-component-height-small);
  }

  &[data-iui-size='large'] {
    --_iui-input-padding-block: var(--iui-size-xs);
    --_iui-input-min-height: var(--iui-component-height-large);
    font-size: var(--iui-font-size-2);
  }

  @each $status in positive, warning, negative {
    &[data-iui-status='#{$status}'] {
      --_iui-input-accent-border-color: var(--iui-color-border-#{$status});

      &::before {
        border-block-end-width: var(--iui-size-3xs);
        border-block-end-color: var(--_iui-input-accent-border-color);
      }

      &:hover {
        --_iui-input-border-color: var(--iui-color-border-#{$status});
      }
    }
  }
}

.iui-input-group-wrapper {
  &[data-iui-label-placement='inline'] {
    display: flex;
    flex-direction: row;

    .iui-status-message {
      margin-inline-start: var(--iui-size-m);
    }
  }
}

.iui-input-group {
  display: flex;
  flex-direction: column;

  .iui-toggle-switch-wrapper {
    padding: calc(var(--iui-size-s) * 0.5) 0;
  }

  .iui-radio-wrapper,
  .iui-checkbox-wrapper {
    min-block-size: var(--iui-size-l);
  }
}

// attribute to include status border in inputs (input, select)
.iui-input,
.iui-input-with-icon > .iui-select-button {
  @each $statusColor in informational, positive, warning, negative {
    &:where([data-iui-status='#{$statusColor}']) {
      padding-block-end: calc(var(--iui-size-2xs) - 1px);

      &[data-iui-size='small'] {
        padding-block-end: 0;
      }

      &[data-iui-size='large'] {
        padding-block-end: calc(var(--iui-size-xs) - 1px);
      }
      // #endregion

      border-block-end: var(--iui-size-3xs) solid var(--iui-color-border-#{$statusColor});

      &:focus {
        border-block-end: var(--iui-size-3xs) solid var(--iui-color-border-#{$statusColor});
        outline: 2px solid var(--iui-color-text-#{$statusColor});
        outline-offset: -2px;
      }

      &:hover {
        --_iui-input-border-color: var(--iui-color-border-#{$statusColor});
        --_iui-input-with-icon-hover-border-color: var(--iui-color-border-#{$statusColor});
      }
    }
  }
}

---
type Props = {
  variant?: 'high-visibility' | 'borderless' | 'cta';
  size?: 'small' | 'large';
  isActive?: boolean;
  shift?: 'left' | 'right';
} & astroHTML.JSX.ButtonHTMLAttributes;

const { class: className, variant, size, isActive, shift, ...props } = Astro.props;
---

<button
  class:list={['iui-button', className]}
  type='button'
  data-iui-variant={variant}
  data-iui-size={size}
  data-iui-active={isActive ? 'true' : undefined}
  data-iui-shift={shift}
  {...props}
  ><slot name='button-icon' />
</button><script>
  const buttonIcons = [
    ...document.querySelectorAll<HTMLInputElement>('[slot="button-icon"]'),
    ...document.querySelectorAll<HTMLInputElement>('button.iui-button>span[aria-hidden="true"]'),
  ];
  buttonIcons.forEach((icon) => {
    icon.classList.add('iui-button-icon');
  });
</script>

---
type Props = {
  variant?: 'high-visibility' | 'borderless' | 'cta' | 'idea';
  size?: 'small' | 'large';
  isActive?: boolean;
  dropdown?: boolean;
} & astroHTML.JSX.ButtonHTMLAttributes;

const { class: className, variant, size, isActive, dropdown, ...props } = Astro.props;
---

<button
  class:list={['iui-button', { 'iui-button-dropdown': dropdown }, className]}
  type='button'
  data-iui-variant={variant}
  data-iui-size={size}
  data-iui-active={isActive ? 'true' : undefined}
  {...props}
>
  <slot name='start-icon' />
  {
    Astro.slots.has('default') ? (
      <span>
        <slot />
      </span>
    ) : undefined
  }
  <slot name='end-icon' />
</button>

---
import __dirname from '__dirname';
import path from 'path';
import { getPropsTableValuesFromTypesFile } from '../utils/props_utils.js';

export interface Props {
  path: string;
}

const relativePath = Astro.props.path.replace(
  '@itwin/itwinui-react',
  '../../packages/itwinui-react' // relative from root of `website` workspace
);

const componentPath = path.join(__dirname, relativePath);
const propTableValues = getPropsTableValuesFromTypesFile(componentPath);
---

<div class='wrapper'>
  <table>
    <thead>
      <tr>
        <th>Prop</th>
        <th>Description</th>
        <th>Default</th>
      </tr>
    </thead>
    <tbody>
      {
        propTableValues.map((propTableValue) => (
          <tr>
            <td class='mono'>{propTableValue.name}</td>
            <td>
              <div class='md' set:html={propTableValue.description} />
              <div class='types'>{propTableValue.type}</div>
            </td>
            <td class='mono'>{propTableValue.defaultValue}</td>
          </tr>
        ))
      }
    </tbody>
  </table>
</div>

<style lang='scss'>
  .wrapper {
    display: flex;
    overflow: auto;
  }

  table {
    color: var(--color-subtext);
    border-spacing: 0;
    border-collapse: collapse;
    width: 100%;

    &,
    * {
      font-size: var(--type--1);
    }
  }

  tr {
    background: transparent;

    & + & {
      border-top: 0.5px solid hsl(0 0% 0% / 0.2);
    }
  }

  th,
  td {
    padding: var(--space-3) var(--space-2);
    max-width: 35ch;

    &:first-child {
      padding-left: 0;
    }

    &:last-child {
      padding-right: 0;
    }
  }

  th {
    text-align: left;
    text-transform: uppercase;
    letter-spacing: 0.05ch;
  }

  tr + tr {
    border-top: 1px solid var(--color-line-2);
  }

  .md {
    font-family: var(--font-body);
    margin-bottom: var(--space-2);

    & code {
      font-family: var(--font-mono);
    }
  }

  .mono {
    font-family: var(--font-mono);
  }

  .types {
    font-family: var(--font-mono);
  }
</style>
